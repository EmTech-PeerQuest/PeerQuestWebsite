services:
  redis:
    image: redis:7
    container_name: peerquest-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    build:
      context: ./PeerQuestBackEnd
    container_name: peerquest-backend
    command: >
      sh -c "python manage.py collectstatic --noinput && daphne -b 0.0.0.0 -p 8000 core.asgi:application"
    volumes:
      - ./PeerQuestBackEnd/media:/app/media  # Only persist media uploads
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - mysql
    env_file:
      - ./PeerQuestBackEnd/.env
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    restart: unless-stopped
  frontend:
    build:
      context: ./PeerQuestFrontEnd
      dockerfile: Dockerfile.prod
    container_name: peerquest-frontend
    command: "npm run start"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - ./PeerQuestFrontEnd/.env.production
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    restart: unless-stopped

  mysql:
    image: mysql:8
    container_name: peerquest-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped

volumes:
  mysql_data:
