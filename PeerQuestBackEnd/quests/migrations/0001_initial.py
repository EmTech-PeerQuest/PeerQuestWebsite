# Generated by Django 5.2.3 on 2025-06-26 11:12

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Quest Categories',
            },
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('short_description', models.CharField(help_text='Brief description for quest cards', max_length=300)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('expert', 'Expert')], default='easy', max_length=10)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('completed', 'Completed'), ('archived', 'Archived')], default='draft', max_length=10)),
                ('xp_reward', models.PositiveIntegerField(default=100, help_text='XP points awarded upon completion')),
                ('estimated_time', models.PositiveIntegerField(help_text='Estimated time in minutes')),
                ('max_participants', models.PositiveIntegerField(default=1, help_text='Maximum number of participants')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('requirements', models.TextField(blank=True, help_text='What needs to be done to complete this quest')),
                ('resources', models.TextField(blank=True, help_text='Links, files, or resources needed for the quest')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_quests', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='quests.questcategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('joined', 'Joined'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('dropped', 'Dropped')], default='joined', max_length=15)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('progress_notes', models.TextField(blank=True)),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quests.quest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='quest',
            name='participants',
            field=models.ManyToManyField(blank=True, related_name='participating_quests', through='quests.QuestParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='QuestSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_text', models.TextField()),
                ('submission_files', models.JSONField(blank=True, default=list, help_text='List of file URLs or paths')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('needs_revision', 'Needs Revision')], default='pending', max_length=15)),
                ('feedback', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('quest_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='quests.questparticipant')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.AddIndex(
            model_name='questparticipant',
            index=models.Index(fields=['quest', 'status'], name='quests_ques_quest_i_cda784_idx'),
        ),
        migrations.AddIndex(
            model_name='questparticipant',
            index=models.Index(fields=['user', 'status'], name='quests_ques_user_id_c2f5b1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='questparticipant',
            unique_together={('quest', 'user')},
        ),
        migrations.AddIndex(
            model_name='quest',
            index=models.Index(fields=['status', 'difficulty'], name='quests_ques_status_1610b2_idx'),
        ),
        migrations.AddIndex(
            model_name='quest',
            index=models.Index(fields=['creator', 'status'], name='quests_ques_creator_c79dec_idx'),
        ),
        migrations.AddIndex(
            model_name='quest',
            index=models.Index(fields=['created_at'], name='quests_ques_created_57a5fa_idx'),
        ),
    ]
