# Generated by Django 5.2.4 on 2025-07-09 18:58

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(help_text='Maximum 2000 characters', max_length=2000)),
                ('difficulty', models.CharField(choices=[('initiate', 'Initiate'), ('adventurer', 'Adventurer'), ('champion', 'Champion'), ('mythic', 'Mythic')], default='initiate', max_length=10)),
                ('status', models.CharField(choices=[('in-progress', 'In-Progress'), ('open', 'Open'), ('completed', 'Completed')], default='open', max_length=15)),
                ('xp_reward', models.PositiveIntegerField(choices=[(25, '25 XP (Initiate)'), (50, '50 XP (Adventurer)'), (100, '100 XP (Champion)'), (200, '200 XP (Mythic)')], default=25, help_text='XP points awarded upon completion')),
                ('gold_reward', models.PositiveIntegerField(default=0, help_text='Gold coins awarded upon completion (0-999)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('commission_fee', models.PositiveIntegerField(default=0, help_text='Commission fee taken by the system for this quest (auto-calculated, non-refundable)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateField(blank=True, help_text='Deadline date for quest completion', null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('requirements', models.TextField(blank=True, help_text='What needs to be done to complete this quest')),
                ('resources', models.TextField(blank=True, help_text='Links, files, or resources needed for the quest')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='If true, this quest is soft-deleted and hidden from normal queries.')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Quest Categories',
            },
        ),
        migrations.CreateModel(
            name='QuestParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('joined', 'Joined'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('dropped', 'Dropped')], default='joined', max_length=15)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('progress_notes', models.TextField(blank=True)),
                ('application_id', models.BigIntegerField(blank=True, null=True)),
                ('application_date', models.DateTimeField(blank=True, null=True)),
                ('application_message', models.TextField(blank=True, default='', null=True)),
                ('review_notes', models.TextField(blank=True, default='', null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text='Text description of the submission')),
                ('link', models.URLField(blank=True, help_text='Optional link to submitted work', null=True)),
                ('submission_files', models.JSONField(blank=True, default=list, help_text='List of file URLs or paths')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('needs_revision', 'Needs Revision')], default='pending', max_length=15)),
                ('feedback', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestSubmissionAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
