# Generated by Django 5.2.3 on 2025-07-05 09:54

from django.db import migrations


def migrate_transaction_types(apps, schema_editor):
    """
    Migrate old transaction types to new transaction types:
    - QUEST_REWARD -> REWARD
    - QUEST_CREATION -> PURCHASE (closest match for spending gold)
    - QUEST_REFUND -> REFUND
    - ADMIN_ADJUSTMENT -> PURCHASE (fallback)
    - GIFT -> TRANSFER
    - OTHER -> PURCHASE (fallback)
    """
    Transaction = apps.get_model('transactions', 'Transaction')
    
    # Mapping of old transaction types to new ones
    type_mapping = {
        'QUEST_REWARD': 'REWARD',
        'QUEST_CREATION': 'PURCHASE',  # Quest creation is spending gold
        'QUEST_REFUND': 'REFUND',
        'ADMIN_ADJUSTMENT': 'PURCHASE',  # Fallback
        'GIFT': 'TRANSFER',  # Gifts are transfers between users
        'OTHER': 'PURCHASE',  # Fallback
        'PURCHASE': 'PURCHASE',  # Already correct
    }
    
    for old_type, new_type in type_mapping.items():
        Transaction.objects.filter(type=old_type).update(type=new_type)
        print(f"Updated {old_type} -> {new_type}")


def reverse_migrate_transaction_types(apps, schema_editor):
    """
    Reverse migration - map back to old transaction types if needed
    """
    Transaction = apps.get_model('transactions', 'Transaction')
    
    # Reverse mapping (best effort)
    reverse_mapping = {
        'REWARD': 'QUEST_REWARD',
        'PURCHASE': 'PURCHASE',  # Keep as is since it could be original purchase or fallback
        'REFUND': 'QUEST_REFUND',
        'TRANSFER': 'GIFT',
    }
    
    for new_type, old_type in reverse_mapping.items():
        Transaction.objects.filter(type=new_type).update(type=old_type)


class Migration(migrations.Migration):

    dependencies = [
        ('transactions', '0005_update_transaction_types'),
    ]

    operations = [
        migrations.RunPython(migrate_transaction_types, reverse_migrate_transaction_types),
    ]
