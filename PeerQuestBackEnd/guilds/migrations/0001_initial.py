# Generated by Django 5.2.3 on 2025-07-06 11:21

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Guild',
            fields=[
                ('guild_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(max_length=500)),
                ('specialization', models.CharField(choices=[('alchemy', 'Alchemy'), ('art_design', 'Art & Design'), ('writing', 'Writing'), ('research', 'Research'), ('protection', 'Protection'), ('development', 'Development'), ('music', 'Music'), ('marketing', 'Marketing')], max_length=20)),
                ('welcome_message', models.TextField(blank=True, max_length=300)),
                ('custom_emblem', models.ImageField(blank=True, null=True, upload_to='guild_emblems/')),
                ('preset_emblem', models.CharField(blank=True, max_length=50)),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=10)),
                ('require_approval', models.BooleanField(default=False)),
                ('minimum_level', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('allow_discovery', models.BooleanField(default=True)),
                ('show_on_home_page', models.BooleanField(default=True)),
                ('who_can_post_quests', models.CharField(choices=[('all_members', 'All Members'), ('admins_only', 'Admins Only'), ('owner_only', 'Owner Only')], default='all_members', max_length=15)),
                ('who_can_invite_members', models.CharField(choices=[('all_members', 'All Members'), ('admins_only', 'Admins Only'), ('owner_only', 'Owner Only')], default='all_members', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member_count', models.PositiveIntegerField(default=1)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_guilds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GuildJoinRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('is_approved', models.BooleanField(blank=True, null=True)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to='guilds.guild')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_join_requests', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guild_join_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('guild', 'user')},
            },
        ),
        migrations.CreateModel(
            name='GuildMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('member', 'Member')], default='member', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('left', 'Left'), ('kicked', 'Kicked')], default='pending', max_length=10)),
                ('is_active', models.BooleanField(default=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_memberships', to=settings.AUTH_USER_MODEL)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='guilds.guild')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guild_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-joined_at'],
                'unique_together': {('guild', 'user')},
            },
        ),
        migrations.CreateModel(
            name='GuildSocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_name', models.CharField(max_length=50)),
                ('url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='guilds.guild')),
            ],
            options={
                'unique_together': {('guild', 'platform_name')},
            },
        ),
        migrations.CreateModel(
            name='GuildTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=30)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='guilds.guild')),
            ],
            options={
                'unique_together': {('guild', 'tag')},
            },
        ),
    ]
